name: Run a gradle task and upload reports
description: |
  Run a gradle task expecting JaCoCo reports to be produced. The exported reports will follow naming conventions
  detailed by our ADRs (https://confluence.equisoft.com/display/HRMI/ADR).

  Coverage details will be added as comments on pull requests.

inputs:
  download-artifact:
    description: Download the `jacoco-build` artifact. Defaults to `true`.
    required: true
    default: "true"
  enable-coverage-comment:
    description: Post coverage results as a comment on the Pull Request. Defaults to `true`.
    required: true
    default: "true"
  gradle-properties:
    description: Content of a gradle.properties file that will be passed to the gradle runner.
    required: false
  gradle-project-path:
    description: |
      Gradle project path. For example: bff.
      Defaults to the root project.
    required: true
    default: "."
  read-only-cache:
    description: If set to true, the action will only read from the cache and will not write to it.
    required: true
    default: "true"
  report-name:
    description: The name of the archived report. It must follow the convention detailed by our ADRs.
    required: true
    default: kotlin-test-coverage.jacoco.xml
  report-retention-days:
    description: Duration in days to preserve reports.
    required: true
    default: "5"
  task-name:
    description: The JaCoCo task name. Defaults to "ci-coverage-verification".
    required: true
    default: ci-coverage-verification
  working-directory:
    description: Relative path under $GITHUB_WORKSPACE where the root project is located.
    required: false
    default: "."

runs:
  using: composite
  steps:
    - name: metadata
      id: metadata
      shell: bash
      run: |
        WORKING_DIRECTORY=${{ inputs.working-directory }}
        GRADLE_PROJECT_PATH=${{  inputs.gradle-project-path }}
        if [[ "$GRADLE_PROJECT_PATH" == "." ]]; then
          ARTIFACT_PATH="$WORKING_DIRECTORY/**"
        else
          ARTIFACT_PATH="$WORKING_DIRECTORY/$GRADLE_PROJECT_PATH"
        fi
        echo "artifact-path=$ARTIFACT_PATH" >> $GITHUB_OUTPUT

    - name: Download jacoco build
      uses: actions/download-artifact@v4
      if: inputs.download-artifact == 'true'
      with:
        merge-multiple: true
        path: ${{ inputs.working-directory }}/${{ inputs.gradle-project-path }}/build/jacoco/
        pattern: '*jacoco-build'

    - name: Process gradle properties
      id: gradle-properties
      shell: python
      env:
        GRADLE_PROPERTIES: ${{ inputs.gradle-properties }}
      run: |
        import os

        properties_list: list[str] = [line for line in (line.strip() for line in os.environ.get('GRADLE_PROPERTIES').splitlines()) if line]
        properties = list(map(lambda x: f'-P{x}' if not x.startswith('-P') else x, properties_list))

        with open(os.environ.get('GITHUB_OUTPUT'), 'a') as output_file:
          output_file.write('gradle-properties=')
          output_file.write(' '.join(properties))
          output_file.write('\n')

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: wrapper
        build-root-directory: ${{ inputs.working-directory }}
        cache-read-only: ${{ inputs.read-only-cache }}

    - name: Validate coverage
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: ./gradlew -p ${{ inputs.gradle-project-path }} ${{ inputs.task-name }} ${{ steps.gradle-properties.outputs.gradle-properties }}

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: "!cancelled()"
      with:
        name: ${{ inputs.report-name }}
        retention-days: ${{ inputs.report-retention-days }}
        path: ${{ steps.metadata.outputs.artifact-path }}/build/reports/jacoco/test/jacocoTestReport.xml

    - name: Find jacocoTestReport.xml
      uses: tj-actions/glob@v22
      id: glob
      if: "!cancelled() && inputs.enable-coverage-comment == 'true' && github.actor != 'dependabot[bot]' && github.event_name == 'pull_request'"
      with:
        safe-output: "false"
        files: ${{ steps.metadata.outputs.artifact-path }}/build/reports/jacoco/test/jacocoTestReport.xml
        separator: ","

    - name: Create annotations
      uses: madrapps/jacoco-report@v1.6.1
      if: "!cancelled() && inputs.enable-coverage-comment == 'true' && github.actor != 'dependabot[bot]' && github.event_name == 'pull_request'"
      with:
        paths: ${{ steps.glob.outputs.paths }}
        token: ${{ github.token }}
        title: Coverage changes (${{ inputs.gradle-project-path }})
        update-comment: true
        min-coverage-overall: 60
        min-coverage-changed-files: 80
